
services:
  model-downloader:
    image: curlimages/curl
    environment:
      - MODELS=llama3.2:3b,llama3.2-vision:11b
    depends_on:
      ollama:
        condition: service_healthy
    entrypoint: /bin/sh
    command: >-
      -c '
      for model in $${MODELS//,/ }; do
        echo "Downloading model: $$model";
        curl -X POST http://ollama:11434/api/pull -d "{\"name\":\"$$model\"}";
      done;
      echo "===========================================";
      echo "âœ… All models have been downloaded successfully!";
      echo "===========================================";
      '

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: always
    healthcheck:
      test: ollama list || exit 1
      interval: 60s
      timeout: 80s
      retries: 5
      start_period: 10s

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "8080:8080"
    runtime: nvidia
    environment:
      NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - open-webui:/app/backend/data
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      ollama:
        condition: service_healthy
      model-downloader:
        condition: service_completed_successfully
    
  # tunnel:
  #   image: cloudflare/cloudflared:latest
  #   command: tunnel --no-autoupdate run --token long_token_here
  #   environment:
  #     - TUNNEL_URL=http://open-webui:8080
  #   restart: unless-stopped
  #   depends_on:
  #     - open-webui

volumes:
  ollama:
  open-webui:
